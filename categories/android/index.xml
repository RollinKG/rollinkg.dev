<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on RollinKG&#39;s Devlog</title>
    <link>https://rollinkg.dev/categories/android/</link>
    <description>Recent content in Android on RollinKG&#39;s Devlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Wed, 07 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://rollinkg.dev/categories/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android Studio RecyclerView Item 내부에서 Databinding</title>
      <link>https://rollinkg.dev/p/android-studio-recyclerview-item-%EB%82%B4%EB%B6%80%EC%97%90%EC%84%9C-databinding/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rollinkg.dev/p/android-studio-recyclerview-item-%EB%82%B4%EB%B6%80%EC%97%90%EC%84%9C-databinding/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Android Studio Binding Adapter 바인딩 어댑터 사용하기</title>
      <link>https://rollinkg.dev/p/android-studio-binding-adapter-%EB%B0%94%EC%9D%B8%EB%94%A9-%EC%96%B4%EB%8C%91%ED%84%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rollinkg.dev/p/android-studio-binding-adapter-%EB%B0%94%EC%9D%B8%EB%94%A9-%EC%96%B4%EB%8C%91%ED%84%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;앞선 &lt;a class=&#34;link&#34; href=&#34;https://rollinkg.github.io/blog/android_mvvm/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MVVM 포스트&lt;/a&gt; 에선 databinding을 이용하여 UI 요소와 &lt;code&gt;LiveData&lt;/code&gt; 변수를 바인딩하는 방법을 알아보았습니다. 여기서 의문이 드는 점이 있습니다. &lt;strong&gt;TextView의 텍스트&lt;/strong&gt; 와 &lt;strong&gt;String&lt;/strong&gt; 처럼 바로 1대1 매치가 되는 값이 아니라, 만약 &lt;code&gt;ImageView&lt;/code&gt;에 Databinding을 적용하고 싶다면? RecyclerView의 리스트에 Databinding을 적용하고 싶다면? 단순히 TextView와는 다르게 내부에서 처리를 해주어야 할 것입니다. 이를 쉽게 하는 방법 중 하나가 &lt;code&gt;BindingAdapter&lt;/code&gt;를 이용하는 것입니다. &lt;code&gt;BindingAdapter&lt;/code&gt; 내부를 원하는 방식으로 구현하면 xml 코드에서 변수에 바인딩만 하는 방식으로 원하는 UI 요소를 구성할 수 있습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android LiveData 알아보기</title>
      <link>https://rollinkg.dev/p/android-livedata-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rollinkg.dev/p/android-livedata-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/</guid>
      <description>&lt;p&gt;&lt;strong&gt;LiveData&lt;/strong&gt;는 &lt;code&gt;Observable&lt;/code&gt;한 데이터 타입입니다. 일반 Observable한 변수와는 다르게 LiveData는 &lt;code&gt;LifeCycle&lt;/code&gt;을 인식합니다. 수명주기 인식을 통해 활성 상태 &lt;em&gt;(STARTED, RESUMED)&lt;/em&gt; 에 있는 앱 컴포넌트만 업데이트합니다. 따라서 UI와 데이터를 처리할 때 메모리 누수라던지 수명주기로 인한 ANR을 신경쓰지 않아도 됩니다. 또한 &lt;code&gt;MVVM&lt;/code&gt; 패턴 및 &lt;code&gt;databinding&lt;/code&gt;을 사용하는데 핵심적인 역할을 합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android Studio MPAndroidChart 파이 그래프 사용하기</title>
      <link>https://rollinkg.dev/p/android-studio-mpandroidchart-%ED%8C%8C%EC%9D%B4-%EA%B7%B8%EB%9E%98%ED%94%84-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rollinkg.dev/p/android-studio-mpandroidchart-%ED%8C%8C%EC%9D%B4-%EA%B7%B8%EB%9E%98%ED%94%84-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;Android UI 오픈소스 &lt;a class=&#34;link&#34; href=&#34;https://github.com/PhilJay/MPAndroidChart&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MPAndroidChart&lt;/a&gt;는 쉽고 다양한 기능을 제공하는 오픈소스 차트 라이브러리입니다. 선, 막대, 파이, 버블 등 다양한 형태와 애니메이션까지 함께 지원하여 간단하게 안드로이드 앱에 시각적 차트 데이터를 삽입할 수 있습니다.&lt;/p&gt;
&lt;p&gt;이번 포스트에서는 &lt;strong&gt;Pie Chart(파이 그래프)&lt;/strong&gt; 의 기본적인 사용법을 알아보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android Studio MPAndroidChart 막대 그래프 사용하기</title>
      <link>https://rollinkg.dev/p/android-studio-mpandroidchart-%EB%A7%89%EB%8C%80-%EA%B7%B8%EB%9E%98%ED%94%84-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rollinkg.dev/p/android-studio-mpandroidchart-%EB%A7%89%EB%8C%80-%EA%B7%B8%EB%9E%98%ED%94%84-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;Android UI 오픈소스 &lt;a class=&#34;link&#34; href=&#34;https://github.com/PhilJay/MPAndroidChart&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MPAndroidChart&lt;/a&gt;는 쉽고 다양한 기능을 제공하는 오픈소스 차트 라이브러리입니다. 선, 막대, 파이, 버블 등 다양한 형태와 애니메이션까지 함께 지원하여 간단하게 안드로이드 앱에 시각적 차트 데이터를 삽입할 수 있습니다.&lt;/p&gt;
&lt;p&gt;이번 포스트에서는 &lt;strong&gt;Bar Chart(막대 그래프)&lt;/strong&gt; 의 기본적인 사용법을 알아보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android SQLite 추상화 라이브러리 Room 사용하기</title>
      <link>https://rollinkg.dev/p/android-sqlite-%EC%B6%94%EC%83%81%ED%99%94-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-room-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rollinkg.dev/p/android-sqlite-%EC%B6%94%EC%83%81%ED%99%94-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-room-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Room&lt;/strong&gt;은 SQLite에 대한 추상화 레이어를 제공하여 로컬 데이터베이스 사용을 원할하게 합니다. Android는 SQLite 대신 Room을 사용할 것을 &lt;strong&gt;적극적으로 권장&lt;/strong&gt; 하며, Room을 사용하여 상당한 양의 앱 데이터를 구조화된 형태로 로컬에 저장할 수 있습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android Studio Databinding으로 MVVM 패턴 적용하기</title>
      <link>https://rollinkg.dev/p/android-studio-databinding%EC%9C%BC%EB%A1%9C-mvvm-%ED%8C%A8%ED%84%B4-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rollinkg.dev/p/android-studio-databinding%EC%9C%BC%EB%A1%9C-mvvm-%ED%8C%A8%ED%84%B4-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;&lt;strong&gt;MVVM&lt;/strong&gt; 패턴이란, 기존의 MVP패턴에서 &lt;code&gt;View&lt;/code&gt;와 &lt;code&gt;Presenter&lt;/code&gt;가 가지는 의존성을 없애기 위한 고안된 방식입니다. Presentation 로직은 똑같이 &lt;code&gt;ViewModel&lt;/code&gt;에서 이루어지지만, 다른 점은 &lt;code&gt;ViewModel&lt;/code&gt;은 &lt;code&gt;View&lt;/code&gt;의 존재를 모릅니다. 기존의 &lt;code&gt;Presenter&lt;/code&gt;은 관련 로직을 처리하고 UI를 갱신하는 메소드를 인터페이스로 작성하여 &lt;code&gt;View&lt;/code&gt;에 넘겨주어야 했지만, MVVM 패턴에서는 이런 과정이 없어진것이죠. 그 대신 &lt;code&gt;View&lt;/code&gt;에서는 갱신되어야 하는 UI가 &lt;strong&gt;Databinding&lt;/strong&gt;으로 &lt;code&gt;ViewModel&lt;/code&gt;의 값에 바인드되어 있습니다. 따라서 &lt;code&gt;ViewModel&lt;/code&gt;에서의 값이 바뀌면 &lt;code&gt;View&lt;/code&gt;의 UI 요소가 자동으로 갱신됩니다. 이런 방식으로 &lt;code&gt;View&lt;/code&gt;와 &lt;code&gt;ViewModel&lt;/code&gt;의 의존성을 없애고 Android MVVM 패턴을 구현할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 436; flex-basis: 1047px&#34;&gt;
		&lt;a href=&#34;https://rollinkg.dev/p/android-studio-databinding%EC%9C%BC%EB%A1%9C-mvvm-%ED%8C%A8%ED%84%B4-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/mvvm.png&#34; data-size=&#34;624x143&#34;&gt;&lt;img src=&#34;https://rollinkg.dev/p/android-studio-databinding%EC%9C%BC%EB%A1%9C-mvvm-%ED%8C%A8%ED%84%B4-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/mvvm.png&#34;
				srcset=&#34;https://rollinkg.dev/p/android-studio-databinding%EC%9C%BC%EB%A1%9C-mvvm-%ED%8C%A8%ED%84%B4-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/mvvm_hu8b8f5b21f058152f16df4a9f22499b26_22297_480x0_resize_box_2.png 480w, https://rollinkg.dev/p/android-studio-databinding%EC%9C%BC%EB%A1%9C-mvvm-%ED%8C%A8%ED%84%B4-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/mvvm_hu8b8f5b21f058152f16df4a9f22499b26_22297_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;624&#34;
				height=&#34;143&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
